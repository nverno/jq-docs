{"Invoking jq": "invoking-jq", "Identity: .": "identity", "Object Identifier-Index: .foo, .foo.bar": "object-identifier-index", "Optional Object Identifier-Index: .foo?": "optional-object-identifier-index", "Object Index: .[<string>]": "object-index", "Array Index: .[<number>]": "array-index", "Array/String Slice: .[<number>:<number>]": "array-string-slice", "Array/Object Value Iterator: .[]": "array-object-value-iterator", ".[]?": ".[]?", "Comma: ,": "comma", "Pipe: |": "pipe", "Parenthesis": "parenthesis", "Basic filters": "basic-filters", "Array construction: []": "array-construction", "Object Construction: {}": "object-construction", "Recursive Descent: ..": "recursive-descent", "Types and Values": "types-and-values", "Addition: +": "addition", "Subtraction: -": "subtraction", "Multiplication, division, modulo: *, /, %": "multiplication-division-modulo", "abs": "abs", "length": "length", "utf8bytelength": "utf8bytelength", "keys, keys_unsorted": "keys-keys_unsorted", "has(key)": "has", "in": "in", "map(f), map_values(f)": "map-map_values", "pick(pathexps)": "pick", "path(path_expression)": "path", "del(path_expression)": "del", "getpath(PATHS)": "getpath", "setpath(PATHS; VALUE)": "setpath", "delpaths(PATHS)": "delpaths", "to_entries, from_entries, with_entries(f)": "to_entries-from_entries-with_entries", "select(boolean_expression)": "select", "arrays, objects, iterables, booleans, numbers, normals, finites, strings, nulls, values, scalars": "arrays-objects-iterables-booleans-numbers-normals-finites-strings-nulls-values-scalars", "empty": "empty", "error, error(message)": "error", "halt": "halt", "halt_error, halt_error(exit_code)": "halt_error", "$__loc__": "$__loc__", "paths, paths(node_filter)": "paths", "add": "add", "any, any(condition), any(generator; condition)": "any", "all, all(condition), all(generator; condition)": "all", "flatten, flatten(depth)": "flatten", "range(upto), range(from; upto), range(from; upto; by)": "range", "floor": "floor", "sqrt": "sqrt", "tonumber": "tonumber", "tostring": "tostring", "type": "type", "infinite, nan, isinfinite, isnan, isfinite, isnormal": "infinite-nan-isinfinite-isnan-isfinite-isnormal", "sort, sort_by(path_expression)": "sort-sort_by", "group_by(path_expression)": "group_by", "min, max, min_by(path_exp), max_by(path_exp)": "min-max-min_by-max_by", "unique, unique_by(path_exp)": "unique-unique_by", "reverse": "reverse", "contains(element)": "contains", "indices(s)": "indices", "index(s), rindex(s)": "index-rindex", "inside": "inside", "startswith(str)": "startswith", "endswith(str)": "endswith", "combinations, combinations(n)": "combinations", "ltrimstr(str)": "ltrimstr", "rtrimstr(str)": "rtrimstr", "explode": "explode", "implode": "implode", "split(str)": "split-1", "join(str)": "join", "ascii_downcase, ascii_upcase": "ascii_downcase-ascii_upcase", "while(cond; update)": "while", "repeat(exp)": "repeat", "until(cond; next)": "until", "recurse(f), recurse, recurse(f; condition)": "recurse", "walk(f)": "walk", "$ENV, env": "$env-env", "transpose": "transpose", "bsearch(x)": "bsearch", "String interpolation: \\(exp)": "string-interpolation", "Convert to/from JSON": "convert-to-from-json", "Format strings and escaping": "format-strings-and-escaping", "Dates": "dates", "SQL-Style Operators": "sql-style-operators", "builtins": "builtins", "Builtin operators and functions": "builtin-operators-and-functions", "==, !=": "==-!=", "if-then-else-end": "if-then-else-end", ">, >=, <=, <": ">->=-<=-<", "and, or, not": "and-or-not", "Alternative operator: //": "alternative-operator", "try-catch": "try-catch", "Breaking out of control structures": "breaking-out-of-control-structures", "Error Suppression / Optional Operator: ?": "error-suppression-optional-operator", "Conditionals and Comparisons": "conditionals-and-comparisons", "test(val), test(regex; flags)": "test", "match(val), match(regex; flags)": "match", "capture(val), capture(regex; flags)": "capture", "scan(regex), scan(regex; flags)": "scan", "split(regex; flags)": "split-2", "splits(regex), splits(regex; flags)": "splits", "sub(regex; tostring), sub(regex; tostring; flags)": "sub", "gsub(regex; tostring), gsub(regex; tostring; flags)": "gsub", "Regular expressions": "regular-expressions", "Variable / Symbolic Binding Operator: ... as $identifier | ...": "variable-symbolic-binding-operator", "Destructuring Alternative Operator: ?//": "destructuring-alternative-operator", "Defining Functions": "defining-functions", "Scoping": "scoping", "isempty(exp)": "isempty", "limit(n; exp)": "limit", "first(expr), last(expr), nth(n; expr)": "first-last-nth-2", "first, last, nth(n)": "first-last-nth-1", "reduce": "reduce", "foreach": "foreach", "Recursion": "recursion", "Generators and iterators": "generators-and-iterators", "Advanced features": "advanced-features", "Math": "math", "input": "input", "inputs": "inputs", "debug, debug(msgs)": "debug", "stderr": "stderr", "input_filename": "input_filename", "input_line_number": "input_line_number", "I/O": "io", "truncate_stream(stream_expression)": "truncate_stream", "fromstream(stream_expression)": "fromstream", "tostream": "tostream", "Streaming": "streaming", "Update-assignment: |=": "update-assignment", "Arithmetic update-assignment: +=, -=, *=, /=, %=, //=": "arithmetic-update-assignment", "Plain assignment: =": "plain-assignment", "Complex assignments": "complex-assignments", "Assignment": "assignment", "import RelativePathString as NAME [<metadata>];": "import-relativepathstring-as-name", "include RelativePathString [<metadata>];": "include-relativepathstring", "import RelativePathString as $NAME [<metadata>];": "import-relativepathstring-as-$name", "module <metadata>;": "module-<metadata>", "modulemeta": "modulemeta", "Modules": "modules", "Colors": "colors"}